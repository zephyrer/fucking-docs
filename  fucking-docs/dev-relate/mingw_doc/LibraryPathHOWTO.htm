<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>



  <title>HOWTO Specify the Location of Libraries for use with MinGW | MinGW</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/aggregator.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/node.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/defaults.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/system.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/system-menus.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/user.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/logintoboggan.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/comment.css">
<link type="text/css" rel="stylesheet" media="all" href="LibraryPathHOWTO_files/style.css">
    <script type="text/javascript"> </script>
  </head><body id="second">
  <div id="page" class="one-sidebar two-sidebars">
  
    <div id="header">
    
      <div id="logo-title">
       
                
                  <h1 id="site-name">
            <a href="http://www.mingw.org/" title="Home">
              MinGW            </a>
          </h1>
                
         
          <div id="site-slogan">
            Minimalist GNU for Windows          </div>
                
      </div>
      
      <div class="menu withprimarywithsecondary">
                      <div id="primary" class="clear-block">
              <ul class="links primary-links"><li class="menu-43 first"><a href="http://www.mingw.org/About" title="About MinGW">About</a></li>
<li class="menu-66"><a href="http://www.mingw.org/wiki/MinGWiki" title="MinGW's New Wiki">Documentation</a></li>
<li class="menu-63"><a href="http://www.mingw.org/tracker">Recent posts</a></li>
<li class="menu-48 last"><a href="http://www.mingw.org/aggregator">Feed aggregator</a></li>
</ul>            </div>
                    
                      <div id="secondary" class="clear-block">
                      </div>
                </div>
      
            
    </div>

    <div id="container" class="withleft withright clear-block">
      
      <div id="main-wrapper">
      <div id="main" class="clear-block">
        <div class="breadcrumb"><a href="http://www.mingw.org/">Home</a></div>                        <h1 class="title">HOWTO Specify the Location of Libraries for use with MinGW</h1>        <div class="tabs"><ul class="tabs primary">
<li class="active"><a href="http://www.mingw.org/wiki/LibraryPathHOWTO" class="active">View</a></li>
<li><a href="http://www.mingw.org/node/88/revisions">Revisions</a></li>
</ul>
</div>                        <div class="node" id="node-88">
  
    
  
    <div class="meta with-taxonomy">
  
          <div class="submitted">Posted March 23rd, 2009 by keith</div> 
        
     
      <div class="taxonomy"><ul class="links inline"><li class="taxonomy_term_9 first"><a href="http://www.mingw.org/category/wiki/gcc" rel="tag" title="">gcc</a></li>
<li class="taxonomy_term_3"><a href="http://www.mingw.org/category/wiki/how_to" rel="tag" title="">how to</a></li>
<li class="taxonomy_term_6"><a href="http://www.mingw.org/category/wiki/install" rel="tag" title="">install</a></li>
<li class="taxonomy_term_51 last"><a href="http://www.mingw.org/category/wiki/libraries" rel="tag" title="">libraries</a></li>
</ul></div>
        
  </div>
    
  <div class="content">
    <div style="text-align: justify;">
<p>FIXME: Page under construction; some value here now, but not yet complete.</p>
<p>I will add to this as time permits; please bear with me. My intent
is to offer advice, complementing the information relating to <a class="" style="" href="http://www.mingw.org/wiki/IncludePathHOWTO">include file search paths</a>, on circumventing the limitations of <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a>'s GCC when installing, and subsequently linking with, user added function libraries.</p>
</div>

<hr>
<div style="text-align: justify;">
<h3 id="toc0" style="margin-top: 15px;">Introduction</h3>
<p> This Mini-HOWTO further develops the theme introduced by the <a class="" style="" href="http://www.mingw.org/wiki/IncludePathHOWTO">IncludePathHOWTO</a>, progressing to a complementary consideration of where the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> implementation of GCC, (or more accurately, of the linker, <em>ld</em>, which is actually a component of the GNU <em>binutils</em> package), searches for object code libraries.  In particular, it address the question: <em>"How do I ensure that the MinGW linker will find my object libraries?"</em></p>
<p>In the case of <em>header files</em>, we observed that the <a href="http://gcc.gnu.org/onlinedocs/index.html#dir">GCC Manual</a> makes a <a href="http://gcc.gnu.org/onlinedocs/cpp/Search-Path.html#Search-Path">definitive statement</a>, regarding the search path for header files, yet we also noted that this statement is not applicable to the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> implementation of GCC.  In the case of <em>libraries</em>, the <a href="http://gcc.gnu.org/onlinedocs/index.html#dir">GCC Manual</a> makes a much <a href="http://gcc.gnu.org/onlinedocs/gcc/Link-Options.html#Link-Options">less definitive statement</a>, which is paradoxically more applicable to the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> implementation, regarding the default search path:</p>
<pre>-llibrary
-l library
    Search the library named library when linking.  (The second alternative
    with the library as a separate argument is only for POSIX compliance and
    is not recommended.)

    It makes a difference where in the command you write this option; the
    linker searches and processes libraries and object files in the order they
    are specified.  Thus, `foo.o -lz bar.o' searches library `z' after file foo.o
    but before bar.o.  If bar.o refers to functions in `z', those functions may
    not be loaded.

    The linker searches a standard list of directories for the library, which is
    actually a file named liblibrary.a.  The linker then uses this file as if it
    had been specified precisely by name.

    The directories searched include several standard system directories plus
    any that you specify with -L.

    :</pre>
<p><em>Note:</em> the second paragraph of the above extract is not
strictly relevant to the subject of this Mini-HOWTO; I've chosen not to
elide it, because it answers another FAQ: <em>"Why do I get undefined
reference errors, when the symbols in question are definitely present
in the libraries I've specified with -l options?"</em> -- the usual answer is that the <em>-l</em>
options have been placed too early in the command line argument
sequence. The remainder, and in particular the final paragraph, are
pertinent, vaguely indicating that libraries will be searched for in <em>several standard system directories</em>; these will be identified more explicitly in this Mini-HOWTO.</p>

<h3 id="toc1" style="margin-top: 25px;">Consulting an Alternative Reference Source<br>
The GNU Binary File Utilities Manual's Perspective</h3>
<p>We have observed that the <a href="http://gcc.gnu.org/onlinedocs/index.html#dir">GCC Manual</a>
makes no definitive statement, regarding the default directories to be
searched for libraries. Since the actual library search is performed by
the linker, <em>ld</em>, which is a component of the <em>GNU Binary File Utilities</em>, (more commonly known as <em>binutils</em>), we might hope to find a more definitive statement in the <a href="http://sourceware.org/binutils/docs/ld/index.html">applicable section</a> of the <a href="http://sourceware.org/binutils/docs/index.html">Binutils Manual</a>.  Unfortunately, while obviously a useful reference for the <em>GNU Binary File Utilities</em> in general, <a href="http://sourceware.org/binutils/docs/ld/index.html">this manual</a> appears to be equally noncommittal; the only references to be found, to library search paths, are in the <a href="http://sourceware.org/binutils/docs/ld/Options.html#index-search-directory_002c-from-cmd-line-55">Command Line Options</a> section:</p>
<pre> :

-Lsearchdir
--library-path=searchdir
    Add path searchdir to the list of paths that ld will search for archive
    libraries and ld control scripts.  You may use this option any number of
    times.  The directories are searched in the order in which they are specified
    on the command line.  Directories specified on the command line are searched
    before the default directories.  All -L options apply to all -l options,
    regardless of the order in which the options appear.

    If searchdir begins with =, then the = will be replaced by the sysroot prefix,
    a path specified when the linker is configured.

    The default set of paths searched (without being specified with `-L') depends
    on which emulation mode ld is using, and in some cases also on how it was
    configured.  See Environment.

    The paths can also be specified in a link script with the SEARCH_DIR command.
    Directories specified this way are searched at the point in which the linker
    script appears in the command line.

 :</pre>
<p> and in the <a href="http://sourceware.org/binutils/docs/ld/File-Commands.html#index-search-path-in-linker-script-334">Linker Scripts / File Commands</a> section:</p>
<pre> :

SEARCH_DIR(path)
    The SEARCH_DIR command adds path to the list of paths where ld looks for
    archive libraries.  Using SEARCH_DIR(path) is exactly like using `-L path'
    on the command line (see Command Line Options).  If both are used, then the
    linker will search both paths.  Paths specified using the command line option
    are searched first.

 :</pre>
<p> while the <a href="http://sourceware.org/binutils/docs/ld/Environment.html#Environment">Environment</a> reference, appearing within the <a href="http://sourceware.org/binutils/docs/ld/Options.html#index-search-directory_002c-from-cmd-line-55">Command Line Options</a> reference, apparently has nothing to say, which is related to this subject.</p>

<h3 id="toc2" style="margin-top: 25px;">Determining MinGW's Default Library Search Path</h3>
<p>So, if the applicable manuals don't give us any definitive indication of which directories will be searched for libraries, how <em>can</em> we identify where the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> tools will search?</p>
<p>The <em><a href="http://sourceware.org/binutils/docs/ld/index.html">ld manual</a></em> tells us that the <a href="http://sourceware.org/binutils/docs/ld/Options.html#index-search-directory_002c-from-cmd-line-55">directories searched</a> will be those specified on the command line, using <em>-L</em> options, followed by those specified in the effective <em>linker script</em>, using the <em>SEARCH_DIR</em> script command.  We may identify the search directories specified within the default <em>linker script</em>, by running the command:</p>
<pre>ld --verbose | grep SEARCH_DIR | tr -s ' ;' \\012</pre><p> which, with a standard <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> installation, might produce output similar to:</p>
<pre>$ ld --verbose | grep SEARCH_DIR | tr -s ' ;' \\012
SEARCH_DIR("/mingw/mingw32/lib")
SEARCH_DIR("/mingw/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib")</pre>
<p>The first thing we might notice about these, is that they are all
specified in the style of POSIX paths; however, since the MinGW tools
are all native MS-Windows applications, the linker will be unable to
resolve these paths in any manner other than as absolute with respect
to the <em>current drive</em>, at the time when the linker is invoked.
Thus, even if these directories do exist, (which is unlikely in a
standard MS-Windows installation), they may represent <em>different</em> locations, depending on whichever drive the user has made <em>current</em>, at the time when the linker is invoked.  (For users of <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a>, they will <em><strong>definitely not</strong></em> be resolved relative to the root of the <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> virtual file system, even if that is what the user might like).</p>
<p>Now, we have seen that none of its pre-configured search paths seem
to be particularly useful as default search paths, for use with the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> linker.  That may be considered to be a configuration error, (which a future <em>binutils</em>
package release may address); nevertheless, it does not appear to
present a significant obstacle to operation in practice, since suitable
search paths may <em>always</em> be specified using <em>-L</em> options.  Of course, any such options which <em><strong>we</strong></em> are required to specify on the command line, can hardly be described as <em><strong>default</strong></em> search paths; however, if we adopt the recommended practice of <em><strong>always</strong></em> invoking <em>ld</em>
via an appropriate GCC front-end, then the GCC driver has an
opportunity to supply such options, in a manner which may be so
described, and in fact, this is precisely what happens.</p>
<p>Thus, we have established that the linker's default search paths have little value, in a standard <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> installation, but that GCC itself furnishes the effective defaults, by supplying appropriate <em>-L</em> options.  To discover what these default <em>-L</em> options are, we might use the command:</p>
<pre>gcc -print-search-dirs</pre><p> If we run this, we will see a
sprawling mess of nigh incomprehensible output; some judicious
filtering, to extract only the library search paths, normalise them to
canonical forms, and present them one per line, can reduce it to a form
which is more readily interpreted:</p>
<pre>$ gcc -print-search-dirs | \ 
&gt; sed '/^lib/b 1;d;:1;s,/[^/.][^/]*/\.\./,/,;t 1;s,:[^=]*=,:;,;s,;,;  ,g' | \ 
&gt; tr \; \\012
libraries:
  c:/mingw/lib/gcc/mingw32/3.4.5/
  c:/mingw/lib/gcc/
  /mingw/lib/gcc/mingw32/3.4.5/
  /usr/lib/gcc/mingw32/3.4.5/
  c:/mingw/mingw32/lib/mingw32/3.4.5/
  c:/mingw/mingw32/lib/
  /mingw/mingw32/lib/mingw32/3.4.5/
  /mingw/mingw32/lib/
  /mingw/lib/mingw32/3.4.5/
  /mingw/lib/
  c:/mingw/lib/mingw32/3.4.5/
  c:/mingw/lib/
  /mingw/lib/mingw32/3.4.5/
  /mingw/lib/
  /lib/mingw32/3.4.5/
  /lib/
  /usr/lib/mingw32/3.4.5/
  /usr/lib/</pre>
<p>Once again, we may observe that this list includes a number of POSIX style paths, which most likely are not relevant for a <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> installation.  If we further filter, to remove the POSIX paths, and keep only the MS-Windows style paths, this list reduces to:</p>
<pre>$ gcc -print-search-dirs | \ 
&gt; sed '/^lib/b 1;d;:1;s,/[^/.][^/]*/\.\./,/,;t 1;s,:[^=]*=,:;,;s,;,;  ,g' | \ 
&gt; tr \; \\012 | \ 
&gt; grep -v '^ */'
libraries:
  c:/mingw/lib/gcc/mingw32/3.4.5/
  c:/mingw/lib/gcc/
  c:/mingw/mingw32/lib/mingw32/3.4.5/
  c:/mingw/mingw32/lib/
  c:/mingw/lib/mingw32/3.4.5/
  c:/mingw/lib/</pre>
<p>From this, we might deduce that GCC will pass each of these paths to the linker, using an appropriate <em>-L</em> option; to verify that deduction, we might use GCC's <em>"-###"</em> option, in a command such as:</p>
<pre>gcc -### -o foo foo.c</pre><p> to reveal <em>exactly</em> what
command GCC will pass to the linker; (again, the output is not
formatted for easy reading, but some judicious filtering will extract
just the <em>-L</em> options, and present them in a form which can be more easily read by humans):</p>
<pre>$ touch foo.c
$ gcc -### -o foo foo.c 2&gt;&amp;1 | \ 
&gt; tr -s \\040 \\012 | \ 
&gt; sed '/^"-L/!d;s,,,;s,"$,/,;:1;s,/[^/.][^/]*/\.\./,/,;t 1' | \ 
&gt; sed 's,^,  ,;1h;1s,.*,libraries:,;1G'
libraries:
  c:/mingw/lib/gcc/mingw32/3.4.5/
  c:/mingw/lib/gcc/
  c:/mingw/mingw32/lib/
  c:/mingw/lib/</pre>
<p>Oops!  What happened there?  In these examples, GCC's <em>-print-search-paths</em> option tells us that there are <em>six</em> MS-Windows paths it will search, but <em>only four</em> of those are passed on to the linker, as <em>-L</em> options.  Why are all six not passed on?</p>
<p>Well, recall that we arbitrarily chose to ignore the POSIX style
paths in GCC's built-in list, when we formulated the list of MS-Windows
paths we expected to be searched, but why would GCC itself make such an
arbitrary choice? In reality, it doesn't. Let's re-examine that full
list of built-in paths, but this time we will filter it on an
analytical basis, selecting only those paths which represent actual <em>physical</em> directories on our host machine:</p>
<pre>$ ( echo libraries:
&gt;   drive=`pwd -W | sed 's,:.*,,'`
&gt;   for dir in `gcc -print-search-dirs \ 
&gt;     | sed '/^lib/b 1;d;:1;s,/[^/.][^/]*/\.\./,/,;t 1;s,:[^=]*=,:;,' \ 
&gt;     | tr \; '\012' \ 
&gt;     | sed "s,^/,$drive:/,"`
&gt;     do test -d $dir &amp;&amp; echo "  $dir"
&gt;     done
&gt; )
libraries:
  c:/mingw/lib/gcc/mingw32/3.4.5/
  c:/mingw/lib/gcc/
  c:/mingw/mingw32/lib/
  c:/mingw/lib/</pre><p> which, we observe, now exactly matches the list of <em>-L</em> options we see passed to the linker, when we invoke GCC with the <em>"-###"</em>
option. Thus, we may refine our previous deduction, to conclude that
GCC will examine it's built-in list of pre-configured library search
directories, passing on to the linker, in the form of <em>-L</em>
options, those which represent actual physical directories on the host
machine; therefore, this becomes the list of default library search
directories for <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a>.</p>

<h3 id="toc3" style="margin-top: 25px;">Installation and Use of Supplementary Libraries with MinGW</h3>
<p>When a project uses only the standard core libraries, either as
provided by the MS-Windows operating system itself, or those provided
as integral components of the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a>
distribution, the user need take no action to ensure that those
libraries will be searched at link time; the compiler driver will take
care of it automatically. Even in cases where the project relies on <em>optional</em> libraries supplied as standard operating system components, and for which <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> provides <em>import libraries</em>, the user need do no more than specify an appropriate <em>-lNAME</em>
option to the compiler driver, and the library will be linked, as
required. In either of these cases, the necessary libraries are located
within the default search path, and no particular action is required of
the user, to specify where that might be.</p>
<p>Conversely, when a project supplements the standard libraries, with
one or more which it creates exclusively for its own use, then those
libraries will <em>not</em> be found in the default search path, so
their location must be explicitly identified to the compiler driver, to
ensure that they can be found at link time. In such cases, in which the
libraries are not installed for use by other projects, the most common,
and indeed the expected practice, is for the project maintainer to
specify the library locations explicitly, by addition of appropriate <em>-L</em>
options to the linking commands within the project's build system
infrastructure. When this is done correctly, there is again no action
required of the user, to specify the location of such supplementary
libraries.</p>
<p>The situation becomes much more interesting, when a project provides one or more supplementary libraries for use by <em>other</em> projects.  In such cases, there is an expectation that the libraries will be <em>installed</em> in some central location, whence they will become readily accessible when <em>client</em> projects are linked, <em>without</em> a need for any particular intervention by the user building the client project, to specify that location.</p>
<p>On typical POSIX systems, and in particular on those conforming to
the GNU model, it is common for the standard system libraries,
including those provided as standard components of the compiler suite,
to be installed in /<em>lib</em> or /<em>usr</em>/<em>lib</em>, while supplementary libraries may be installed in /<em>usr</em>/<em>local</em>/<em>lib</em>.  In fact, as we have already observed, these three locations are already included, by means of <em>SEARCH_DIR("...")</em> commands in the default linker scripts, as defaults to be searched by the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a>
linker; unfortunately, they are specified exactly as such, in the
original POSIX format, which cannot be readily interpreted in the file
system context in which the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> linker must operate!  This is a limitation of the <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a>
linker, which the user installing supplementary libraries must work
around, possibly by adopting one of the following strategies:--</p>
<ol style="margin-right: 2em;">
  <li><p>Install in a <em>non-default</em> location, and require every user of the installed libraries to explicitly add the requisite <em>-L</em> options to the linking commands, for <em>every</em>
subsequent project which requires any supplementary library. This is
inconvenient for subsequent use, and is generally not recommended.</p></li>
<li>Install in a location which is already considered to be a default
by the compiler driver. This often recommended option is the simplest
possible, for <em>both</em> the user installing the libraries, <em>and</em> for those using them.  If using <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a>
as the command line environment for building and installing the
libraries, and the libraries themselves are delivered as GNU standard
source packages, such installation may be readily accomplished by the
command sequence:<br>
<pre>../path/to/configure --prefix=`cd /mingw ; pwd -W` ... &amp;&amp; make &amp;&amp; make install</pre><p>(Note: here we explicitly force the use of MS-Windows <em>native</em> path format for the <em>prefix</em>; this is normally necessary, if the libraries being built hard code the <em>prefix</em> within object files).</p>
<p>It may be noted that, in this example, we appear to have arbitrarily chosen the top level <em>lib</em> sub-directory, within <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a>'s
own installation directory, as the preferred location for installation
of supplementary libraries; in reality, of the pre-existing default
search directories this is the only sane choice, since the others are
much more specifically associated with the component libraries provided
by the compiler suite itself, and it is undesirable to pollute them
with "foreign" libraries. Indeed, many users also consider it
undesirable to pollute the top level <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> library directory with such "foreign" libraries; such users may prefer the following alternative installation strategy.</p></li>
<li><p>Install in a <em>non-default</em> location, just as in the first option, but also customise the <em>linker scripts</em>, or the <em>compiler driver specs</em>, to <em>implicitly</em> add the requisite <em>-L</em>
option, such that this location becomes an additional default search
path. Available techniques for achieving such customisation will be
discussed, in the following section.</p></li>
</ol>

<h3 id="toc4" style="margin-top: 25px;">Customising MinGW's Default Library Search Path</h3>
<p>So, you've decided you would prefer to segregate your add-on libraries from the core <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> libraries?  The first issue to address, is <em>where</em> you would like to install them.</p>
<p>Here, you have two basic options:
</p><ol style="margin-right: 2em;">
<li><p>Establish a set up, analogous to the common /<em>usr</em>/<em>local</em>
hierarchy of typical Unix systems, with all additional libraries, and
their associated header files, collected into this one location.</p></li>
<li><p>Provide a separate directory for each individual library package, and customise the GCC search paths to consider <em>all</em> of them, as appropriate, when looking for libraries and header files.</p></li>
</ol>

<p>It should be fairly obvious that the first of these will require
less GCC customisation than the second. In fact, the principles are the
same in both cases; however, whereas the first requires the addition of
only one include path, (<em>-I</em> option), and one library path, (<em>-L</em>
option), the second will require one of each per library package
installed, which may be detrimental to GCC performance. Thus, we will
describe only the first option in detail; users preferring the second
may extend the principles described, as necessary, to accommodate their
preference.</p>
<p>Having chosen to install all add-on libraries in a common location, the choice of that location is fairly arbitrary.  <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> users may choose to simply use the conceptual /<em>usr</em>/<em>local</em> of their existing <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> installation, in which case, they must ensure that that directory physically exists, (it may not in a bare, standard <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> installation), and they must identify it's true <em><strong>native</strong></em> Windows path, for use in the GCC customisation, as shown in the following example, for a <em><strong>standard</strong></em> <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> installation in its <em><strong>default</strong></em> installation directory:</p>
<pre>$ mkdir -p /usr/local
$ ( cd /usr/local &amp;&amp; pwd -W )
c:/msys/1.0/local</pre>
<p>Alternatively, masochists who prefer to persist with <em>cmd.exe</em>, or <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> users who prefer to keep <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> related add-ons more closely associated with their <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> installations, might choose to create an installation directory locally within their <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> tree:</p>
<pre>C:\&gt; mkdir c:\mingw\local</pre>
<p> or adjacent to it:</p>
<pre>C:\&gt; mkdir c:\mingw-local</pre>
<p><em><strong>Caution:</strong></em> <em>Whichever of these options you choose,</em> <em><strong>please do not</strong></em> <em>choose to create</em> <em><strong>any directory with white space</strong></em> <em>appearing</em> <em><strong>anywhere</strong></em> <em>in
its absolute path name. If you adopt this asinine practice, do not be
surprised if it turns around and bites. When it does, please</em> <em><strong>do not</strong></em> <em>come here to complain; you have been warned!</em></p>

<p><em>TODO: additional text for this section to be added</em>.</p>
</div>  </div>
  
      <div class="links">
      <ul class="links inline"><li class="comment_forbidden first"><span><a href="http://www.mingw.org/user/login?destination=comment/reply/88%2523comment-form">Login</a> or <a href="http://www.mingw.org/user/register?destination=comment/reply/88%2523comment-form">register</a> to post comments</span></li>
<li class="statistics_counter last"><span>8396 reads</span></li>
</ul>    </div>
    
</div>
<div id="comments">
  <a id="comment-277"></a>
<div class="comment">
<h3 class="title"><a href="http://www.mingw.org/wiki/LibraryPathHOWTO#comment-277" class="active">Re: HOWTO Specify the Location of Libraries for use with MinGW</a></h3>
<div class="picture">
  </div>
    <div class="submitted">On May 2nd, 2009 bohan says:</div>
    <div class="content"><p>The LIBRARY_PATH environment variable is used by gcc. This is what the man page says about it:</p>
<p><em>The value of LIBRARY_PATH is a colon-separated list of
directories, much like PATH. When configured as a native compiler, GCC
tries the directories thus specified when searching for special linker
files, if it can’t find them using GCC_EXEC_PREFIX. Linking using GCC
also uses these directories when searching for ordinary libraries for
the -l option (but directories specified with -L come first).</em></p>
</div>
    <div class="links"><ul class="links"><li class="comment_forbidden first last"><span><a href="http://www.mingw.org/user/login?destination=comment/reply/88%2523comment-form">Login</a> or <a href="http://www.mingw.org/user/register?destination=comment/reply/88%2523comment-form">register</a> to post comments</span></li>
</ul></div>
</div>
<div class="indented"><a id="comment-278"></a>
<div class="comment">
<h3 class="title"><a href="http://www.mingw.org/wiki/LibraryPathHOWTO#comment-278" class="active">Re: HOWTO Specify the Location of Libraries for use with MinGW</a></h3>
<div class="picture">
  <img src="LibraryPathHOWTO_files/picture-7.png" alt="keith's picture" title="keith's picture"></div>
    <div class="submitted">On May 5th, 2009 keith says:</div>
    <div class="content"><p>Yes indeed.  Notice that this is still a work in progress, and <em>LIBRARY_PATH</em> is <em><strong>one</strong></em> of the customisation options, which needs to be mentioned in the text yet to be written.  Do note, however, that on <em>MS-Windows</em> it is <em><strong>not</strong></em> a <em>colon-separated</em> list; it needs to be <em>semicolon-separated</em>, with all of its members specified in <em>native MS-Windows</em> format; (however, <a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a> users may specify it as a colon-separated list, <em><strong>if all</strong></em> of its members are specified in <em><a class="" style="" href="http://www.mingw.org/wiki/MSYS">MSYS</a>' </em>emulated <em>POSIX</em> style, and it will be converted appropriately, but mixed <em>POSIX</em> and <em>MS-Windows</em> styles are unsupported).</p>
<p>A further point to note: the <em>manpage</em> snippet cited is somewhat ambiguous, but it suggests that <em>LIBRARY_PATH</em> is <em><strong>not</strong></em> used if <em>mingw32-gcc</em> is built as a <em>cross-compiler</em>.  This feature may be of use only to those running <a class="" style="" href="http://www.mingw.org/wiki/MinGW">MinGW</a> as a <em>native</em> compiler on <em>MS-Windows</em>; it may have no value, for those of us who run it cross hosted.</p>
<p>Thanks for this comment. The focus of the article is more on setting
the system up to avoid dependency on a proliferation of environment
variables; however, the comment is pertinent, and a valuable source of
additional information, until such time as I cover this aspect within
the body text. When I get to that point, I will discard this attached
comment thread.</p>
</div>
    <div class="links"><ul class="links"><li class="comment_forbidden first last"><span><a href="http://www.mingw.org/user/login?destination=comment/reply/88%2523comment-form">Login</a> or <a href="http://www.mingw.org/user/register?destination=comment/reply/88%2523comment-form">register</a> to post comments</span></li>
</ul></div>
</div>
<div class="indented"><a id="comment-292"></a>
<div class="comment">
<h3 class="title"><a href="http://www.mingw.org/wiki/LibraryPathHOWTO#comment-292" class="active">Re: HOWTO Specify the Location of Libraries for use with MinGW</a></h3>
<div class="picture">
  </div>
    <div class="submitted">On May 16th, 2009 bohan says:</div>
    <div class="content"><p>Thank
you for explaining in more details that man page paragraph. When
reading it, It's indeed easy to miss the fact it's not usable with a
cross-compiler! I was also wondering what the man page refers to with "<em>searching for special linker files</em>". Are these the specs files described in the <a class="" style="" href="http://www.mingw.org/wiki/SpecsFileHOWTO">SpecsFileHOWTO</a> page?</p>
</div>
    <div class="links"><ul class="links"><li class="comment_forbidden first last"><span><a href="http://www.mingw.org/user/login?destination=comment/reply/88%2523comment-form">Login</a> or <a href="http://www.mingw.org/user/register?destination=comment/reply/88%2523comment-form">register</a> to post comments</span></li>
</ul></div>
</div>
<div class="indented"><a id="comment-294"></a>
<div class="comment">
<h3 class="title"><a href="http://www.mingw.org/wiki/LibraryPathHOWTO#comment-294" class="active">Re: HOWTO Specify the Location of Libraries for use with MinGW</a></h3>
<div class="picture">
  <img src="LibraryPathHOWTO_files/picture-7.png" alt="keith's picture" title="keith's picture"></div>
    <div class="submitted">On May 16th, 2009 keith says:</div>
    <div class="content"><p>No, the <em>specs</em> files are specific to configuration of the GCC front-end drivers.  As I understand it, <em>special linker files</em> would be the linker scripts, referred to in the <em>ld</em> section of the binutils manual.</p>
</div>
    <div class="links"><ul class="links"><li class="comment_forbidden first last"><span><a href="http://www.mingw.org/user/login?destination=comment/reply/88%2523comment-form">Login</a> or <a href="http://www.mingw.org/user/register?destination=comment/reply/88%2523comment-form">register</a> to post comments</span></li>
</ul></div>
</div>
</div></div></div></div>
              </div>
      </div>
      
              <div id="sidebar-left" class="sidebar">
          <form action="/wiki/LibraryPathHOWTO" accept-charset="UTF-8" method="post" id="search-theme-form">
<div><div id="search" class="container-inline">
  <div class="form-item" id="edit-search-theme-form-1-wrapper">
 <label for="edit-search-theme-form-1">Search this site: </label>
 <input maxlength="128" name="search_theme_form" id="edit-search-theme-form-1" size="15" title="Enter the terms you wish to search for." class="form-text" type="text">
</div>
<input name="op" id="edit-submit" value="Search" class="form-submit" type="submit">
<input name="form_build_id" id="form-e6a594b3f4649df8686f548cdaf2cee1" value="form-e6a594b3f4649df8686f548cdaf2cee1" type="hidden">
<input name="form_id" id="edit-search-theme-form" value="search_theme_form" type="hidden">
</div>

</div></form>
          <div class="block block-block" id="block-block-2">
  <div class="blockinner">

    <h2 class="title"> Administrative Update </h2>
    <div class="content">
      Thanks to <br><a href="http://www.networkredux.com/"><img src="LibraryPathHOWTO_files/NetworkRedux-140x31-3.png"></a><br> As of March 4th, 2009 13:30 UTC we have a new hosting provider for our web portal.  Please consider giving <a href="http://www.networkredux.com/">NetworkRedux</a> your hosting business as a thank you to providing FOSS projects hosting solutions.     </div>
    
  </div>
</div>
<div class="block block-user" id="block-user-0">
  <div class="blockinner">

    <h2 class="title"> User login </h2>
    <div class="content">
      <a href="http://www.mingw.org/user/login?destination=node%2F88">Login/Register</a>    </div>
    
  </div>
</div>
<div class="block block-user" id="block-user-1">
  <div class="blockinner">

    <h2 class="title"> Navigation </h2>
    <div class="content">
      <ul class="menu"><li class="expanded first"><a href="http://www.mingw.org/About" title="About MinGW">About</a><ul class="menu"><li class="leaf first"><a href="http://www.mingw.org/contact">Contact</a></li>
<li class="leaf"><a href="http://www.mingw.org/history" title="History">History</a></li>
<li class="leaf"><a href="http://www.mingw.org/license" title="Licensing Terms">Licensing Terms</a></li>
<li class="leaf"><a href="http://www.mingw.org/mailing_lists" title="Mailing Lists">Mailing Lists</a></li>
<li class="leaf"><a href="http://www.mingw.org/privacy" title="Privacy">Privacy</a></li>
<li class="leaf"><a href="http://www.mingw.org/bugs.shtml" title="Reporting Bugs">Reporting Bugs</a></li>
<li class="leaf"><a href="http://www.mingw.org/wiki/SubmitPatches" title="How to submit patches">Submit Patches</a></li>
<li class="leaf"><a href="https://sourceforge.net/project/showfiles.php?group_id=2435">Downloads</a></li>
<li class="leaf last"><a href="http://www.mingw.org/sitemap.xml" title="Sitemap">Sitemap</a></li>
</ul></li>
<li class="collapsed"><a href="http://www.mingw.org/wiki/MinGWiki" title="MinGW's New Wiki">Documentation</a></li>
<li class="leaf"><a href="http://www.mingw.org/tracker">Recent posts</a></li>
<li class="collapsed last"><a href="http://www.mingw.org/aggregator">Feed aggregator</a></li>
</ul>    </div>
    
  </div>
</div>
<div class="block block-user" id="block-user-3">
  <div class="blockinner">

    <h2 class="title"> Who's online </h2>
    <div class="content">
      There are currently <em>1 user</em> and <em>80 guests</em> online.<div class="item-list"><h3>Online users</h3><ul><li class="first last">chenhu</li>
</ul></div>    </div>
    
  </div>
</div>
<div class="block block-statistics" id="block-statistics-0">
  <div class="blockinner">

    <h2 class="title"> Popular content </h2>
    <div class="content">
      <div class="item-list"><h3>Today's:</h3><ul><li class="first"><a href="http://www.mingw.org/wiki/HOWTO_Install_the_MinGW_GCC_Compiler_Suite">HOWTO Install the MinGW (GCC) Compiler Suite</a></li>
<li><a href="http://www.mingw.org/wiki/MSYS">MSYS</a></li>
<li><a href="http://www.mingw.org/wiki/Getting_Started">Getting Started</a></li>
<li><a href="http://www.mingw.org/wiki/MinGWiki">MinGWiki</a></li>
<li><a href="http://www.mingw.org/wiki/FAQ">FAQ</a></li>
<li><a href="http://www.mingw.org/wiki/HOWTO">HOWTO</a></li>
<li class="last"><a href="http://www.mingw.org/wiki/MinGW">MinGW</a></li>
</ul></div><br><div class="item-list"><h3>All time:</h3><ul><li class="first"><a href="http://www.mingw.org/wiki/HOWTO_Install_the_MinGW_GCC_Compiler_Suite">HOWTO Install the MinGW (GCC) Compiler Suite</a></li>
<li><a href="http://www.mingw.org/wiki/MSYS">MSYS</a></li>
<li class="last"><a href="http://www.mingw.org/wiki/Getting_Started">Getting Started</a></li>
</ul></div><br><div class="item-list"><h3>Last viewed:</h3><ul><li class="first"><a href="http://www.mingw.org/wiki/MSYS">MSYS</a></li>
<li><a href="http://www.mingw.org/wiki/HOWTO_Install_the_MinGW_GCC_Compiler_Suite">HOWTO Install the MinGW (GCC) Compiler Suite</a></li>
<li class="last"><a href="http://www.mingw.org/About">Welcome to MinGW.org</a></li>
</ul></div>    </div>
    
  </div>
</div>
<div class="block block-comment" id="block-comment-0">
  <div class="blockinner">

    <h2 class="title"> Recent comments </h2>
    <div class="content">
      <div class="item-list"><ul><li class="first"><a href="http://www.mingw.org/wiki/Getting_Started#comment-538">Re: MinGW 5.1.6 Error: mismatched long filename</a><br>2 weeks 3 days ago</li>
<li><a href="http://www.mingw.org/wiki/Getting_Started#comment-537">MinGW 5.1.6 Error: mismatched long filename</a><br>2 weeks 5 days ago</li>
<li><a href="http://www.mingw.org/wiki/Getting_Started#comment-534">Re: Getting Started</a><br>4 weeks 21 hours ago</li>
<li><a href="http://www.mingw.org/wiki/MinGW#comment-533">Re: MinGW and Twilight Dragon media</a><br>4 weeks 3 days ago</li>
<li><a href="http://www.mingw.org/wiki/MinGW#comment-532">Re: MinGW and Twilight Dragon media</a><br>4 weeks 6 days ago</li>
<li><a href="http://www.mingw.org/wiki/Getting_Started#comment-521">Re: Getting Started</a><br>7 weeks 1 day ago</li>
<li><a href="http://www.mingw.org/wiki/MSYS#comment-507">Re: bug in MSYS-1.0.11.exe</a><br>12 weeks 6 days ago</li>
<li><a href="http://www.mingw.org/wiki/MSYS#comment-506">bug in MSYS-1.0.11.exe</a><br>13 weeks 5 hours ago</li>
<li><a href="http://www.mingw.org/wiki/MinGW#comment-496">Re: MinGW and Twilight Dragon media</a><br>16 weeks 2 days ago</li>
<li class="last"><a href="http://www.mingw.org/wiki/FAQ#comment-484">Re: FAQ</a><br>18 weeks 6 days ago</li>
</ul></div>    </div>
    
  </div>
</div>
        </div>
      
              <div id="sidebar-right" class="sidebar">
          <div class="block block-block" id="block-block-1">
  <div class="blockinner">

    <h2 class="title"> Mail List Search </h2>
    <div class="content">
         <form method="post" action="http://sourceforge.net/search/">
   <p>
   <span class="small">Choose Mail List:</span>
   <select name="forum_id">
     <option selected="selected" value="5119">MinGW-users</option>
     <option value="4855">MinGW-msys</option>
     <option value="5123">MinGW-dvlpr</option>
     <option value="5121">MinGW-notify</option>
   </select>
   </p><p>
   <input name="type_of_search" value="mlists" type="hidden">
   <input name="group_id" value="2435" type="hidden">
   <input name="words" id="Words" type="text"><br>
   <input name="exact" value="1" checked="checked" type="checkbox">
         <span id="Label">Require all words?</span><br><br>
   <input name="Search" value="Search" type="submit">
   </p>
   </form>
    </div>
    
  </div>
</div>
<div class="block block-block" id="block-block-4">
  <div class="blockinner">

    <h2 class="title"> Powered by </h2>
    <div class="content">
      <a href="http://sourceforge.net/projects/mingw" target="_sfpage"><img src="LibraryPathHOWTO_files/sflogo.png" alt="SourceForge Logo" width="88" border="0" height="31">  </a><br><a href="http://www.networkredux.com/"><img src="LibraryPathHOWTO_files/NetworkRedux-140x31-3.png"></a><br><a href="http://drupal.org/"><img src="LibraryPathHOWTO_files/powered-blue-80x15.png"></a><br>
    </div>
    
  </div>
</div>
        </div>
      
    </div>

    <div id="footer">
      Copyright © 2009 - MinGW.org
    </div>

    
        
  </div>

</body></html>